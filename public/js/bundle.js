(()=>{"use strict";async function t(t){const e=(await miro.board.widgets.get({type:"FRAME"})).filter((e=>e.title===t));if(0===e.length)throw alert("「"+e+"」というタイトルがついたフレームが存在しません。"),new Error("「"+e+"」というタイトルがついたフレームが存在しません。");if(e.length>1)throw alert("「"+e+"」というタイトルがついたフレームが複数存在します。"),new Error("「"+e+"」というタイトルがついたフレームが複数存在します。");return e[0]}async function e(t,e,o){const i=await miro.board.tags.get({title:"自動生成"});if(0===i.length)throw alert("「自動生成」というタグがこのボードにありません。作ってください。"),new Error("「自動生成」というタグがこのボードにありません。作ってください。");const r=e.childrenIds,n=(await async function(t){const e=(await miro.board.widgets.get({type:"SHAPE"})).filter((e=>e.plainText===t));if(0===e.length)throw alert("「"+t+"」という枠は存在しません。"),new Error("「"+t+"」という枠は存在しません。");return e}(o)).filter((t=>r.includes(t.id)));if(0===n.length)throw alert("フレーム「"+e.title+"」上に「"+o+"」という枠が存在しません。"),new Error("フレーム「"+e.title+"」上に「"+o+"」という枠が存在しません。");if(n.length>1)throw alert("フレーム「"+e.title+"」上に「"+o+"」という枠が複数存在します。"),new Error("フレーム「"+e.title+"」上に「"+o+"」という枠が複数存在します。");const a=n[0].bounds.width/199,s=await miro.board.widgets.create({type:"STICKER",text:t,x:n[0].x,y:n[0].y,scale:a,style:{stickerBackgroundColor:0}});i[0].widgetIds.push(s[0].id),await miro.board.tags.update({id:i[0].id,widgetIds:i[0].widgetIds})}function o(t,e){return t.some((t=>e.includes(t)))}function i(t){return Math.round(10*t)/10}async function r(t,e,o,i,r,s){const l=[];for(const[a,c]of t.entries()){const g=await n(c,i,a,t.length-1,e,o,r,s);l.push(g)}for(let e=0;e<t.length-1;e++)await a(l[e],l[e+1],r,s);return l}async function n(t,e,o,r,n,a,s,l){const c=n-a,g=e.right-e.left,d=e.left+g/r*o,h=e.bottom-e.top,w=e.bottom-h/c*(t-a);return await miro.board.widgets.create({type:"TEXT",scale:3*s,text:i(t).toString(),x:d+50*s,y:w-50*s,style:{textColor:"#808080"}}),(await miro.board.widgets.create({type:"SHAPE",style:{shapeType:4,borderColor:"transparent",backgroundColor:l},x:d,y:w,height:30*s,width:30*s}))[0]}async function a(t,e,o,i){await miro.board.widgets.create({type:"LINE",style:{lineColor:i,lineThickness:8*o},startPosition:{x:t.x,y:t.y},endPosition:{x:e.x,y:e.y}})}miro.onReady((()=>{miro.initialize({extensionPoints:{bottomBar:{title:"Graph maker",svgIcon:'<svg xmlns="http://www.w3.org/2000/svg" enable-background="new 0 0 24 24" height="24px" viewBox="0 0 24 24" width="24px" fill="#000000"><g><rect fill="none" height="24" width="24"/></g><g><g><path d="M21,8c-1.45,0-2.26,1.44-1.93,2.51l-3.55,3.56c-0.3-0.09-0.74-0.09-1.04,0l-2.55-2.55C12.27,10.45,11.46,9,10,9 c-1.45,0-2.27,1.44-1.93,2.52l-4.56,4.55C2.44,15.74,1,16.55,1,18c0,1.1,0.9,2,2,2c1.45,0,2.26-1.44,1.93-2.51l4.55-4.56 c0.3,0.09,0.74,0.09,1.04,0l2.55,2.55C12.73,16.55,13.54,18,15,18c1.45,0,2.27-1.44,1.93-2.52l3.56-3.55 C21.56,12.26,23,11.45,23,10C23,8.9,22.1,8,21,8z"/><polygon points="15,9 15.94,6.93 18,6 15.94,5.07 15,3 14.08,5.07 12,6 14.08,6.93"/><polygon points="3.5,11 4,9 6,8.5 4,8 3.5,6 3,8 1,8.5 3,9"/></g></g></svg>',onClick:async()=>{console.log("====以下、自動生成付箋の削除===="),await async function(){const e=(await miro.board.widgets.get({type:"STICKER"})).filter((t=>t.tags.some((t=>"自動生成"===t.title)))).map((t=>t.id));await miro.board.widgets.deleteById(e);const o=(await t("スプリントバーンアップチャート")).childrenIds;await miro.board.widgets.deleteById(o)}(),console.log("====以下、PBI毎の合計時間の演算====");const n=await async function(){const o=(await miro.board.widgets.get({type:"STICKER"})).filter((t=>t.tags.some((t=>"PBIリスト"===t.title))));if(0===o.length)throw alert("PBIリストのタグがついた付箋が存在しません。"),new Error("PBIリストのタグがついた付箋が存在しません。");if(o.length>1)throw alert("PBIリストのタグがついた付箋が複数存在します。"),new Error("PBIリストのタグがついた付箋が複数存在します。");const r=o[0].plainText.split(" "),n=[];for(const o of r){const r=(await miro.board.widgets.get({type:"STICKER"})).filter((t=>t.tags.some((t=>t.title===o))&&t.tags.some((t=>t.title.includes("予定："))))).reduce(((t,e)=>t+Number(e.tags.find((t=>t.title.includes("予定："))).title.split("：")[1].replace("h",""))),0),a=await t(o);await e(`${o}<br>合計<br>${i(r)}h`,a,"タスク 合計時間"),n.push({name:o,hour:r})}return n}();console.log("====以下、全PBIの合計時間の演算====");const a=await async function(o){const r=o.reduce(((t,e)=>t+e.hour),0),n=await t("sprint information");return await e(`合計タスク時間<br>${i(r)}h`,n,"全タスク 合計時間"),r}(n);console.log("====以下、1日で消化したタスク時間の演算====");const s=await async function(){const t=await miro.board.widgets.get({type:"FRAME"}),r=await miro.board.widgets.get({type:"STICKER"}),n=t.filter((t=>t.title.includes("Day")));let a=[];const s=await getLatestDay();for(const t of n){let n=0;const l=r.filter((t=>t.tags.some((t=>"開発時間"===t.title)))).map((t=>t.id));if(!o(t.childrenIds,l))break;for(const e of t.childrenIds){const t=r.filter((t=>t.tags.some((t=>t.title.includes("予定："))))).find((t=>t.id===e));n+=t?Number(t.tags.find((t=>t.title.includes("予定："))).title.split("：")[1].replace("h","")):0}if(await e(`${t.title}<br>消化タスク<br>${i(n)}h`,t,"消化タスク 合計時間"),a.push({frame:t,hour:n}),t.title===s)break}return a.sort(((t,e)=>{const o=Number(t.frame.title.replace("Day","")),i=Number(e.frame.title.replace("Day",""));return o<i?-1:i<o?1:-1})),a}();console.log("====以下、1日で確保できる開発時間の取得====");const l=await async function(){const t=(await miro.board.widgets.get({type:"FRAME"})).filter((t=>t.title.includes("Day"))),e=(await miro.board.widgets.get({type:"STICKER"})).filter((t=>t.tags.some((t=>"開発時間"===t.title)))),i=[];for(const r of t)if(o(r.childrenIds,e.map((t=>t.id)))){const t=Number(e.find((t=>r.childrenIds.includes(t.id))).plainText.replace("h",""));i.push({frame:r,hour:t})}i.sort(((t,e)=>{const o=Number(t.frame.title.replace("Day","")),i=Number(e.frame.title.replace("Day",""));return o<i?-1:i<o?1:-1}));const r=await getLatestDay();if(!i.some((t=>t.frame.title===r)))throw alert("finishの付箋が不適切なフレームの上にあります。置かれている場所:"+r),new Error("finishの付箋が不適切なフレームの上にあります。置かれている場所:"+r);if(Number(i.slice(-1)[0].frame.title.replace("Day",""))!==i.length)throw alert("DayXフレームの開発時間の付箋に抜けがあります"),new Error("DayXフレームの開発時間の付箋に抜けがあります");return i}();console.log("====以下、1日で消費したバッファの演算====");const c=await async function(t,o){let r=[];for(let n=0;n<t.length;n++){if(t[n].frame.title!==o[n].frame.title)throw alert("日次タスク消化時間と日次開発時間の順番が異なっています。"+t[n].frame.title+" and "+o[n].frame.title),new Error("日次タスク消化時間と日次開発時間の順番が異なっています。"+t[n].frame.title+" and "+o[n].frame.title);const a=i(o[n].hour-t[n].hour);r.push({frame:t[n].frame,hour:a}),await e(`バッファ消化<br>${a}h`,t[n].frame,"消費バッファ 合計時間")}return r}(s,l);console.log("====以下、全日で確保できる開発時間の演算====");const g=await async function(o){const i=await t("sprint information"),r=o.reduce(((t,e)=>t+e.hour),0);return await e(`開発時間<br>${r}h`,i,"開発合計 持ち時間"),r}(l);console.log("====以下、全日のバッファの合計の演算====");const d=await async function(o,r){const n=await t("sprint information"),a=i(r-o);return await e(`バッファ<br>合計時間<br>${a}h`,n,"バッファ 合計時間"),a}(a,g);console.log("====グラフの描画===="),await async function(e,o,i,n,a){console.log("====3つのグラフの点の算出====");const s=function(t,e,o){const i=[t];for(let t=1;t<=o;t++)t<=e.length?i.push(i[t-1]-e[t-1]):i.push(i[t-1]);return i}(e,o,i),l=function(t,e){const o=[0];for(let i=1;i<=e;i++){const e=t[i-1]?o[i-1]+t[i-1]:o[i-1];o.push(e)}return o}(n,i),c=function(t,e){const o=t/e,i=[0];for(let t=1;t<=e;t++)i.push(i[t-1]+o);return i}(a,i);console.log("====グラフの軸描画====");const{minHour:g,maxHour:d}=(h=s.concat(l).concat(c),{minHour:Math.min(...h),maxHour:Math.max(...h)});var h;const{basePoints:w,sizeRate:f}=await async function(e,o){const i=await t("スプリントバーンアップチャート"),r=i.height/1800,{left:n,right:a,top:s,bottom:l}=i.bounds,c=n+100*r,g=a-100*r,d=s+100*r,h=l-100*r,w=d+100*r,f=h-100*r,u=g-100*r,y=f-w,p=(0-e)/(o-e);console.log(p);const m=f-y*p;return await miro.board.widgets.create([{type:"LINE",startPosition:{x:c,y:m},endPosition:{x:g,y:m}},{type:"LINE",startPosition:{x:c,y:h},endPosition:{x:c,y:d}},{type:"TEXT",text:"START",x:c,y:m+50*r,scale:3*r,width:50*r,style:{textAlign:"c"}}]),{basePoints:{top:w,bottom:f,left:c,right:u,originalTop:d,originalBottom:h,originalRight:g,zero:m},sizeRate:r}}(g,d);console.log("====残バッファグラフの描画====");const u=await r(s,d,g,w,f,"#f4a460");console.log("====消化タスクグラフの描画===="),await r(l,d,g,w,f,"#4169e1"),console.log("====理想線の描画===="),await r(c,d,g,w,f,"#3cb371"),console.log("====本日の枠の描画===="),await async function(t,e,o,i){const r=o[e].x,n=(t.originalTop+t.originalBottom)/2,a=t.originalBottom-t.originalTop,s=200*i,l={backgroundColor:"transparent",borderWidth:5*i,borderColor:"#ff1493"};await miro.board.widgets.create({type:"SHAPE",x:r,y:n,height:a,width:s,style:l})}(w,o.length,u,f),console.log("====メモリ描画===="),await async function(t,e,o,i,r){const n=[],a=Math.floor(t/10),s=Math.floor(e/10)+(Math.floor(e)%10==0?0:1),l=(r.bottom-r.top)/(t-e);for(let t=s;t<=a;t++)0!==t&&(n.push({type:"SHAPE",x:r.left,y:r.zero-10*t*l,width:20*o,height:20*o,style:{shapeType:4,backgroundColor:"#000000",borderColor:"transparent"}}),n.push({type:"LINE",startPosition:{x:r.left,y:r.zero-10*t*l},endPosition:{x:r.originalRight,y:r.zero-10*t*l},style:{lineColor:"#c0c0c0",lineThickness:3*o,lineStyle:1}}),n.push({type:"TEXT",x:r.left-30*o,y:r.zero-10*t*l,text:(10*t).toString(),scale:3*o}));i.forEach(((t,e)=>{0!==e&&(n.push({type:"SHAPE",x:t.x,y:r.zero,width:20*o,height:20*o,style:{shapeType:4,backgroundColor:"#000000",borderColor:"transparent"}}),n.push({type:"LINE",startPosition:{x:t.x,y:r.originalBottom},endPosition:{x:t.x,y:r.originalTop},style:{lineColor:"#c0c0c0",lineThickness:3*o,lineStyle:1}}),n.push({type:"TEXT",x:t.x,y:r.zero+50*o,text:"Day"+e,scale:3*o}))})),await miro.board.widgets.create(n)}(d,g,f,u,w)}(d,c.map((t=>t.hour)),l.length,s.map((t=>t.hour)),a),console.log("====終わり====")}}}})}))})();